from django.db import models
from solo.models import SingletonModel


class TextPrompt(SingletonModel):

    shop_settings_content_main_prompt = models.TextField(
        verbose_name='Настройки ИМ - Контент - Главная', blank=True, null=True,
        default='В этом разделе Вы можете заполнить контент, который будет отображаться на главной странице Вашего интернет-магазина. Загрузите баннер для первого экрана и баннеры для блоков “Новинки”, “Хиты сезона”, “Распродажа”. Для сохранения и публикации изменений нажмите на кнопку “Применить”.')
    shop_settings_content_about_prompt = models.TextField(
        verbose_name='Настройки ИМ - Контент - О компании', blank=True, null=True,
        default='Фотография и краткий текст о компании будут отображаться на главной странице Вашего интернет-магазина в блоке “О компании”. Полный текст о компании - на странице “О компании”. Для сохранения и публикации изменений нажмите на кнопку “Применить”.')
    shop_settings_content_information_prompt = models.TextField(
        verbose_name='Настройки ИМ - Контент - Информация', blank=True, null=True,
        default='Текст, добавленный в этом разделе, будет отображаться на странице “Информация” Вашего интернет-магазина. Переключайтесь по вкладкам выше, чтобы добавить текст во все блоки страницы. Для сохранения и публикации изменений нажмите на кнопку “Применить”.')
    shop_settings_content_delivery_prompt = models.TextField(
        verbose_name='Настройки ИМ - Контент - Доставка', blank=True, null=True,
        default='Здесь Вам необходимо указать способы доставки, которые будут выводиться Вашим покупателям при оформлении заказа. Укажите короткое название способа доставки и его стоимость. Можно указать не более трех способов. Для сохранения изменения нажмите на кнопку “Применить”.')
    shop_settings_content_footer_prompt = models.TextField(
        verbose_name='Настройки ИМ - Контент - Футер', blank=True, null=True,
        default='Заполните поля в форме ниже, чтобы они отобразились в футере на всех страницах Вашего сайта. Чтобы логотип был на прозрачном фоне, его необходимо загружать в формате png. Для отображения иконок соц. сетей укажите ссылки на Ваши страницы.')
    shop_settings_content_contacts_prompt = models.TextField(
        verbose_name='Настройки ИМ - Контент - Контакты', blank=True, null=True,
        default='Заполните поля в форме ниже, чтобы они отобразились на странице “Контакты” Вашего сайта. Незаполненные поля не будут выводиться. В поле “Краткий текст” Вы можете указать дополнительные контактные данные.')
    shop_settings_content_live_photos_prompt = models.TextField(
        verbose_name='Настройки ИМ - Контент - Живые фото', blank=True, null=True,
        default='Для копирования фотографий в Ваш интернет-магазин Вам необходимо проставить галочки чекбоксы у нужных альбомов и нажать на кнопку “Применить”. Чтобы удалить фотографии со своего сайта, необходимо снять галочки у фото и нажать на кнопку “Применить”. Название альбомов можно редактировать.')
    shop_settings_main_catalog_prompt = models.TextField(
        verbose_name='Настройки ИМ - Основной каталог', blank=True, null=True,
        default='Выберите те товары, которые Вы хотите отобразить на Вашем сайте, и нажмите на кнопку “В свой каталог”. По умолчанию товар копируется с ценой, указанной в поле “Цена для вас”. Если Вы указываете наценку на категории, то к “Цене для вас” прибавляется эта наценка. Если Вы указываете персональную цену в поле “Ваша цена”, то товар отображается с ней, наценка на категорию не учитывается.')
    shop_settings_my_catalog_prompt = models.TextField(
        verbose_name='Настройки ИМ - Мой каталог', blank=True, null=True,
        default='Для удаления товаров из Вашего каталога необходимо выделить их галочкой. Появится кнопка “Удалить”, после нажатия на которую товары выбранные товары будут удалены из Вашего интернет-магазина. На этой же странице Вы можете редактировать цены на товары и наценки на категории. По умолчанию товар копируется с ценой, указанной в поле “Цена для вас”. Если Вы указываете наценку на категории, то к “Цене для вас” прибавляется эта наценка. Если Вы указываете персональную цену в поле “Ваша цена”, то товар отображается с ней, наценка на категорию не учитывается.')
    lk_export_photo_prompt = models.TextField(
        verbose_name='Личный кабинет - Скачать фото', blank=True, null=True,
        default='Выделите нужные фото и нажмите на кнопку “Скачать выбранные”, чтобы скачать фото одним архивом. Для дропшипперов действует ограничение на скачивание: не более 50 штук в день, если нет созданного интернет-магазина на платформе Fashion Town. Для оптовых покупателей нет ограничений на скачивание.')
    lk_notifications_prompt = models.TextField(
        verbose_name='Личный кабинет - Уведомления', blank=True, null=True,
        default='В этом разделе отображаются все уведомления о событиях на платформе. Вы можете выбрать ненужные уведомлений и удалить их. Чтобы прочесть полный текст уведомления, нажмите на него.')
    main_in_stock_prompt = models.TextField(
        verbose_name='Главная страница - Товары в наличии', blank=True, null=True,
        default='Здесь отображаются товары, которые есть в наличии. Внимание! Количество товара ограничено. Товар резервируется за покупателем после поступления оплаты. Товар в корзине не считается купленным.')
    main_catalog_prompt = models.TextField(
        verbose_name='Главная страница - Каталог', blank=True, null=True,
        default='Здесь представлены все товары платформы, в том числе те, которые продаются под заказ. Если вы хотите посмотреть только товары в наличии, воспользуйтесь фильтром “В наличии”.')
    information_sizes_prompt = models.TextField(
        verbose_name='Информация - Размеры', blank=True, null=True,
        default='')
    order_wait_call_prompt = models.TextField(
        verbose_name='Заказ - Дождаться звонка', blank=True, null=True,
        default='')
    empty_cart_prompt = models.TextField(
        verbose_name='Пустая корзина', blank=True, null=True,
        default='')
    empty_wishlist_prompt = models.TextField(
        verbose_name='Пустое избранное', blank=True, null=True,
        default='')

    def __str__(self):
        return 'Текстовые подсказки'

    class Meta:
        verbose_name = 'Текстовые подсказки'
